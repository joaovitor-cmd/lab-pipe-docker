trigger:
  branches:
    include:
    - master

pool:
  vmImage: 'ubuntu-latest'
  persistCredentials: true


variables:
  imageRepository: 'dmoraesrs/convertc'
  tag: '$(Build.BuildId)'
  persistCredentials: true


steps:
- task: Docker@2
  displayName: 'Login to Docker Hub'
  inputs:
    command: login
    containerRegistry: 'DockerHub'  # Assegure-se de configurar esta conexão de serviço no Azure DevOps

- task: Docker@2
  displayName: 'Build and push Docker image'
  inputs:
    command: buildAndPush
    repository: $(imageRepository)
    dockerfile: '$(Build.SourcesDirectory)/Dockerfile'  # Certifique-se que o caminho para o Dockerfile está correto
    containerRegistry: 'DockerHub'  # Nome da conexão de serviço configurada para Docker Hub
    tags: |
      $(tag)

- task: DownloadSecureFile@1
  name: downloadKey
  displayName: 'Download SSH Key'
  inputs:
    secureFile: 'id_rsa'
    targetFolder: '$(Build.SourcesDirectory)'
- script: |
    git config --global user.email "dmoraes@outlook.com"
    git config --global user.name "Diego Moraes"
    mkdir ~/.ssh
    cp -R $(Agent.TempDirectory)/* ~/.ssh/
    chown -R vsts:vsts ~/.ssh
    chmod 400 ~/.ssh/*
    git clone git@ssh.dev.azure.com:v3/TILabs00/ArgoCD/temperature-converter-chart
    ls
    pwd
    cd temperature-converter-chart/temperature-converter-c
    sed -i 's/tag:.*/tag: $(Build.BuildId)/' values.yaml
    git add values.yaml
    git commit -m "Atualizando a tag da imagem para $(Build.BuildId)"
    git push
  displayName: 'Update and Push Deployment Manifest'


